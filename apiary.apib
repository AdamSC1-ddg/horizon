FORMAT: 1A
HOST: https://horizon-testnet.stellar.org

# Horizon

Horizon is the client facing API server for the Stellar ecosystem.  See [an overview of the Stellar ecosystem](#) for more details.

Horizon provides three significant portions of functionality:  The Transactions API, the History API, and the Trading API.

## Transactions API

The Transactions API exists to help you make transactions against the Stellar network.  It provides ways to help you create valid transactions, such as providing an account's sequence number or latest known balances. 

In addition to the read endpoints, the Transactions API also provides the endpoint to submit transactions.

## History API

The History API provides endpoints for retrieving data about what has happened in the past on the Stellar network.  It provides (or will provide) endpoints that let you:

- Retrieve transaction details
- Load transactions that effect a given account
- Load payment history for an account
- Load trade history for a given order book

## Trading API

The Trading API provides endpoints for retrieving data about the distributed
currency exchange within stellar.  It provides data regarding open offers to
exchange currency (often called an order book) and also provides data about
trades that were executed within the exchange.


## API Overview

The following section describes a couple of important concepts for the horizon api at a high level.  Understanding these concepts will help make your overall experience integrating with horizon much easier.

### Response Format

Rather than using a full custom way of representing the resources we expose in Horizon, we use [HAL](http://stateless.co/hal_specification.html). HAL is a simple hypermedia format in JSON that remains simple while giving us a couple of benefits such as simpler client integration for several languages. See [this wiki page](https://github.com/mikekelly/hal_specification/wiki/Libraries) for a list of libraries.

See [Responses](responses.md) for more details

### Error Format

HAL doesn't really have any special consideration for error responses.  To provide some standardization to our API's error messages we use the [Problem Details for HTTP APIs RFC](https://tools.ietf.org/html/draft-ietf-appsawg-http-problem-00)

See [errors](errors.md) for more details

### Paging

Some resources in horizon represent a collection of other resources.  Almost always, loading this collection in its entirety is not feasible.  To work around this, we provide a way to page through a collection.

The paging system in horizon is known as a _token-based_ paging system.  There is no "page 3" or the like.  Paging through a collection in a token-based paging system involves three pieces of data:

- the *paging token*, which is an opaque value that logically represents the last record seen by a client.
- the *limit*, or page size, a positive integer.
- the *order* applied to the whole collection

See [paging](paging.md) for more details.

## Ledger [/ledgers/{sequence}]

The Stellar network stores data in shared public ledger, and is changes by a series of transactions applied one after the other.  Each round of consensus produces a new ledger, identified by a sequence number.  The ledger resource represents a summary of a closed ledger and contains links to further details.

+ Attributes
  + id (string, required)                 - An opaque identifier for this resource
  + paging_token (string, required)       - An opaque cursor, which may be used for paging through the collection (i.e. used as the cursor parameter)
  + hash (string, required)               - The Hex-encoded hash of the ledger header
  + prev_hash (string, optional)          - The Hex-encoded hash of the ledger header preceding this ledger
  + sequence (number, required)           - This ledger's sequence number
  + transaction_count (number, required)  - The number of transactions that were validated and applied during the creation of this ledger
  + operations_count (number, required)   - The number of operations that were applied during the creation of this ledger
  + closed_at (Date, required)            - The time that this ledger was validated by the network and closed

### View ledger summary [GET]

+ Parameters
  + sequence: 4 (number, required) - A sequence number
+ Response 200
  + Attributes (Ledger)
  + Body

            {
              "_links": {
                "effects": {
                  "href": "/ledgers/4/effects{?cursor}{?limit}{?order}",
                  "templated": true
                },
                "operations": {
                  "href": "/ledgers/4/operations{?cursor}{?limit}{?order}",
                  "templated": true
                },
                "self": {
                  "href": "/ledgers/4"
                },
                "transactions": {
                  "href": "/ledgers/4/transactions{?cursor}{?limit}{?order}",
                  "templated": true
                }
              },
              "id": "4f9c63d164aa1e4fcd04d19e6022e9a551f53583eff2e3501db9068837a19a4f",
              "paging_token": "17179869184",
              "hash": "4f9c63d164aa1e4fcd04d19e6022e9a551f53583eff2e3501db9068837a19a4f",
              "prev_hash": "1812a844552b6ef10665ff429f69e5af77460db28cbf108870d1cb0e607c909b",
              "sequence": 4,
              "transaction_count": 4,
              "operation_count": 4,
              "closed_at": "2015-06-12T17:41:32Z"
            }

## Account [/accounts/{address}]

Represents the current state of an account as of the latest closed
ledger imported by horizon.

+ Attributes
  + id           (string, required) - An opaque identifier for this resource
  + paging_token (string, required) - An opaque cursor, which may be used for paging through the collection (i.e. used as the cursor parameter)
  + address      (string, required) - The address for the account
  + sequence     (number, required) - The current sequence for the account, as of the last validated ledger
  + balances     (array, required)  - TODO

### View account details [GET]

+ Parameters
  + address: gcEuhxySh58bKtCY3UPaWQDR7a1BzGB3ePdxc4UrinkBJyxESe (string, required) - Address of an account
+ Response 200
  + Attributes (Account)
  + Body

            {
              "_links": {
                "effects": {
                  "href": "/accounts/gcEuhxySh58bKtCY3UPaWQDR7a1BzGB3ePdxc4UrinkBJyxESe/effects/{?cursor}{?limit}{?order}",
                  "templated": true
                },
                "offers": {
                  "href": "/accounts/gcEuhxySh58bKtCY3UPaWQDR7a1BzGB3ePdxc4UrinkBJyxESe/offers/{?cursor}{?limit}{?order}",
                  "templated": true
                },
                "operations": {
                  "href": "/accounts/gcEuhxySh58bKtCY3UPaWQDR7a1BzGB3ePdxc4UrinkBJyxESe/operations/{?cursor}{?limit}{?order}",
                  "templated": true
                },
                "self": {
                  "href": "/accounts/gcEuhxySh58bKtCY3UPaWQDR7a1BzGB3ePdxc4UrinkBJyxESe"
                },
                "transactions": {
                  "href": "/accounts/gcEuhxySh58bKtCY3UPaWQDR7a1BzGB3ePdxc4UrinkBJyxESe/transactions/{?cursor}{?limit}{?order}",
                  "templated": true
                }
              },
              "id": "gcEuhxySh58bKtCY3UPaWQDR7a1BzGB3ePdxc4UrinkBJyxESe",
              "paging_token": "1163936141312",
            "address": "gcEuhxySh58bKtCY3UPaWQDR7a1BzGB3ePdxc4UrinkBJyxESe",
              "sequence": 1163936137285,
            "balances": [
                {
                "currency_type": "native",
                  "balance": 99939999999310
                }
              ]
            }

## Transaction [/transactions/{hash}]

Represents a single transaction that has been submitted and validated by the stellar network

+ Attributes
  + id (string, required)               - An opaque identifier for this resource
  + paging_token (string, required)     - An opaque cursor, which may be used for paging through the collection (i.e. used as the cursor parameter)
  + hash (string, required)             - Hex-encoded hash of the transaction
  + ledger (number, required)           - The ledger sequence in which this transaction was validated
  + account (string, required)          - The base58-encoded address of this transaction's source account
  + account_sequence (number, required) - The sequence number for this transaction and source account
  + max_fee (number, required)          - The maximum fee configured to be acceptable to this transaction
  + fee_paid (number, required)         - The actual fee paid by this transaction's source account during application to the ledger
  + operation_count (number, required)  - The number of operations that are encoded into this transaction
  + result_code (number, required)      - The result code for the application of this transaction to the ledger
  + result_code_s (string, required)    - The string representation of the result code
  + envelope_xdr (string, required)     - The base64-encoded XDR representation of the original TransactionEnveleop
  + result_xdr (string, required)       - The base64-encoded XDR representation of the TransactionResultPair returned during application
  + result_meta_xdr (string, required)  - The base64-encoded XDR representation of the TransactionMeta created during transaction application


### View transaction's details [GET]

  + Parameters

    + hash (required, string, `0ab231385734ad4092cc0651f3acd2a6e3eead24282f2725a79d019d4b791d54`) ... The hex-encoded hash of a transaction

  + Response 200

      + Attributes (Transaction)

## Transaction Collection [/transactions{?order}{?limit}{?after}]

+ Model (application/hal+json)

        {
          "_links": {
            "next": {
              "href": "/transactions?after=373a31&limit=1&order=asc"
            }
          },
          "_embedded": {
            "records": [
              {
                "_links": {
                  "self": {
                    "href": "/transactions/0ab231385734ad4092cc0651f3acd2a6e3eead24282f2725a79d019d4b791d54"
                  },
                  "account": {
                    "href": "/accounts/gM4gu1GLe3vm8LKFfRJcmTt1eaEuQEbo61a8BVkGcou78m21K7"
                  }
                },
                "hash": "0ab231385734ad4092cc0651f3acd2a6e3eead24282f2725a79d019d4b791d54",
                "ledger": 7,
                "application_order": [
                  7,
                  1
                ],
                "account": "gM4gu1GLe3vm8LKFfRJcmTt1eaEuQEbo61a8BVkGcou78m21K7",
                "account_sequence": 1,
                "max_fee": 10,
                "fee_paid": 10,
                "operation_count": 1
              }
            ]
          }
        }

### View a page of transaction history [GET]

  + Parameters
    + after (optional, string, `373a31`) ... A paging token
    + limit (optional, number, `10`) ... The maximum number of transactions to return in the response
    + order (string)

        The order to traverse the transaction collection

        + Values
            + `asc`
            + `desc`

  + Response 200

    [Transaction Collection][]


### Submitting a transaction [POST]

  + Request (application/x-www-form-urlencoded)

        tx=fffff

  + Response 200 (application/hal+json)

        {}


# Data Structures

## Date (string)

An ISO8601 string representation of a time

### Sample

"2012-06-30T13:15:00Z"

### Sample

"2015-06-12T08:15:10.12345Z"

## Resource (object)

+ Attributes
  + id (string, required)                 - An opaque identifier for this resource
  + paging_token (string, required)       - An opaque cursor, which may be used for paging through the collection (i.e. used as the cursor parameter)
